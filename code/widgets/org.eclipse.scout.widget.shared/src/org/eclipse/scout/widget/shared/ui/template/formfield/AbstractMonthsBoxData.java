/**
 * 
 */
package org.eclipse.scout.widget.shared.ui.template.formfield;

import java.util.Map;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.form.ValidationRule;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractFormFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 * 
 * @generated
 */
@Generated(value = "org.eclipse.scout.sdk.workspace.dto.formdata.FormDataDtoUpdateOperation", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public abstract class AbstractMonthsBoxData extends AbstractFormFieldData {

  private static final long serialVersionUID = 1L;

  public AbstractMonthsBoxData() {
  }

  public April getApril() {
    return getFieldByClass(April.class);
  }

  public February getFebruary() {
    return getFieldByClass(February.class);
  }

  public January getJanuary() {
    return getFieldByClass(January.class);
  }

  public June getJune() {
    return getFieldByClass(June.class);
  }

  public March getMarch() {
    return getFieldByClass(March.class);
  }

  public May getMay() {
    return getFieldByClass(May.class);
  }

  public static class April extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public April() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class February extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public February() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class January extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public January() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class June extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public June() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class March extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public March() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class May extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public May() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }
}
